def merge(A,p,q,r):
    n1=q-p+1
    n2=r-q
    L=[0]*(n1+1)
    R=[0]*(n2+1)
    for i in range(0,n1):
        L[i]=A[p+i]
    for j in range(0,n2):
        R[j]=A[q+j+1]
    L[n1]=float('inf')
    R[n2]=float('inf')
    i=0
    j=0
    for k in range(p,r+1):
        if (L[i]<=R[j]):
            A[k]=L[i]
            i=i+1
        else:
            A[k]=R[j]
            j=j+1
    return A
def mergeSort(A,p,r):
    if (p<r):
        q=int((p+r)/2)
        mergeSort(A,p,q)
        mergeSort(A,q+1,r)
        merge(A,p,q,r)
    return A
def FMCS(A,low,mid,high):
    maxLeft=low
    maxRight=high
    leftSum=float('-inf')
    s=0
    for i in range(mid, low-1, -1):
        s= s+A[i]
        if (s>leftSum):
            leftSum=s
            maxLeft=i
    rightSum=float('-inf')
    s=0
    for j in range(mid+1,high+1):
        s=s+A[j]
        if s>rightSum:
            rightSum=s
            maxRight=j
    return (maxLeft,maxRight,leftSum+rightSum)
            
